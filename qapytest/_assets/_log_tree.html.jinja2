{% macro render_log_tree(log_list, test_index, attachment_counter={'value': 0}) %}
{% if log_list %}
<ul>
{% for entry in log_list %}
    {% if entry.type == 'step' %}
        <li class="{{ 'step-passed' if entry.passed else 'step-failed' }}">
            {{ 'âœ”ï¸Ž' if entry.passed else 'âœ–ï¸Ž' }} <strong>Step:</strong> {{ entry.message|e }}
            {# --- Recursive Call --- #}
            {{ render_log_tree(entry.children, test_index, attachment_counter) }}
        </li>
    {% elif entry.type == 'assert' %}
        <li class="{{ 'assert-passed' if entry.passed else 'assert-failed' }}">
            {{ 'âœ”ï¸Ž' if entry.passed else 'âœ–ï¸Ž' }} {{ entry.label|e }}
            {% if not entry.passed %}[<code>{{ entry.details|e }}</code>]{% endif %}
        </li>
    {% elif entry.type == 'attachment' %}
        {% set _ = attachment_counter.update({'value': attachment_counter.value + 1}) %}
        {% set modal_id = 'attachment-modal-' ~ test_index ~ '-' ~ attachment_counter.value %}
        <li>
            <button class="details-btn" type="button" data-modal-target="#{{ modal_id }}">ðŸ“Ž {{ entry.label|e }}</button>
        </li>
    {% endif %}
{% endfor %}
</ul>
{% endif %}
{% endmacro %}
